import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchProducts,
  filterByCategory,
} from "@/features/products/productSlice";
import {
  CategoryContainer,
  CategoryCard,
  CategoryImage,
  CategoryTitle,
} from "../styles/CategorySectionStyles";

const CategorySection = () => {
  const dispatch = useDispatch();
  const { products, selectedCategory } = useSelector((state) => state.product);

  useEffect(() => {
    dispatch(fetchProducts()); // âœ… ÃœrÃ¼nleri Ã§ek
  }, [dispatch]);

  // ğŸ“Œ ÃœrÃ¼nler iÃ§indeki kategorileri al, tekrar edenleri kaldÄ±r
  const uniqueCategories = [
    ...new Map(
      products.map((item) => [item.category.id, item.category])
    ).values(),
  ];

  const handleCategoryClick = (categoryId) => {
    dispatch(filterByCategory(categoryId));
    console.log("ğŸ“Œ SeÃ§ilen Kategori:", categoryId); // âœ… Konsolda kontrol et
  };

  return (
    <CategoryContainer>
      {/* ğŸ“Œ TÃ¼m ÃœrÃ¼nler SeÃ§eneÄŸi */}
      <CategoryCard
        onClick={() => handleCategoryClick(null)}
        $active={!selectedCategory} // âœ… `$active` olarak deÄŸiÅŸtirildi!
      >
        <CategoryTitle>ğŸ“Œ TÃ¼m ÃœrÃ¼nler</CategoryTitle>
      </CategoryCard>

      {uniqueCategories.map((category) => (
        <CategoryCard
          key={category.id}
          onClick={() => dispatch(filterByCategory(category.id))}
          $active={selectedCategory === category.id} // âœ… `$active` olarak deÄŸiÅŸtirildi!
        >
          <CategoryImage src={category.image} alt={category.name} />
          <CategoryTitle>{category.name}</CategoryTitle>
        </CategoryCard>
      ))}
    </CategoryContainer>
  );
};

export default CategorySection;
